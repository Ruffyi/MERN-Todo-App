{"version":3,"sources":["App.module.scss","components/Header/Header.module.scss","components/Todos/Todos.module.scss","components/Todos/TodosHeader/TodosHeader.module.scss","components/Todos/TodosForm/TodosForm.module.scss","components/UI/Button/Button.module.scss","components/Todos/TodosList/TodosList.module.scss","components/Todos/TodosItem/TodosItem.module.scss","components/Actions/Actions.module.scss","components/UI/ActionButtons/ActionButtons.module.scss","assets/images/bg-desktop-dark.jpg","assets/images/bg-desktop-light.jpg","components/Header/Header.tsx","assets/svg/icon-sun.svg","assets/svg/icon-moon.svg","features/themeSlice/themeSlice.ts","components/Todos/TodosHeader/TodosHeader.tsx","assets/svg/icon-check.svg","components/UI/Button/Button.tsx","services/api.ts","features/todoSlice/todoSlice.ts","services/helpers/apiActions.ts","hooks/useButton/useButton.ts","components/Todos/TodosForm/TodosForm.tsx","assets/svg/icon-cross.svg","components/Todos/TodosItem/TodosItem.tsx","components/Todos/TodosList/TodosList.tsx","hooks/UseWindowSize/useWindowSize.ts","components/UI/ActionButtons/ActionButtons.tsx","components/Actions/Actions.tsx","components/Todos/Todos.tsx","App.tsx","store/index.ts","index.tsx"],"names":["module","exports","styled","bemCssModules","HeaderStyles","Header","theme","useSelector","state","className","src","bgDesktopDark","bgDesktopLight","alt","themeSlice","createSlice","name","initialState","reducers","toggleTheme","payload","localStorage","setItem","addThemeFromStorage","actions","TodosHeaderStyles","TodosHeader","dispatch","useDispatch","onClick","iconSun","iconMoon","setSettings","modifierDelimiter","BtnStyles","Button","changeStatusHandler","status","modifier","complete","role","iconCheck","AXIOS_APIBASE","getTodoData","createAsyncThunk","a","axios","method","headers","response","data","todos","todoSlice","filteredTodos","addTodo","push","changeTodoStatus","map","todo","_id","deleteTodo","filter","filterTodos","clearCompletedTodos","extraReducers","builder","addCase","fulfilled","postFetch","url","resData","newTodo","patchFetch","deleteFetch","useButton","modifiers","formBtn","useState","todoModifier","setTodoModifier","todoStatus","setTodoStatus","useEffect","newTodoStatus","TodosFormStyles","TodosForm","todoName","setTodoName","submitFormHandler","e","preventDefault","trim","length","light","onSubmit","type","placeholder","value","onChange","target","TodosItemStyles","TodosItem","iconCross","TodosListStyles","TodosList","useWindowSize","width","height","windowSize","setWindowSize","setSizes","window","innerWidth","innerHeight","addEventListener","removeEventListener","ActionButtonsStyles","ActionButtons","handleFilterTodos","ActionsStyles","Actions","forEach","TodosStyles","Todos","AppStyles","App","console","log","storageTheme","getItem","todoStore","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.09c1ab06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3llRO\",\"app--light\":\"App_app--light__hNps0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3R3dn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__2Fp57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__btn\":\"TodosHeader_header__btn__2OK9j\",\"header\":\"TodosHeader_header__2w7lN\",\"header__title\":\"TodosHeader_header__title__2MsF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodosForm_form__1mset\",\"form--light\":\"TodosForm_form--light__2_EzV\",\"form__status\":\"TodosForm_form__status__tMWJ6\",\"form__input\":\"TodosForm_form__input__1IhHb\",\"form__input--light\":\"TodosForm_form__input--light__1opA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status__btn\":\"Button_status__btn__3zsBy\",\"status\":\"Button_status__1O6B6\",\"status__btn--complete\":\"Button_status__btn--complete__3vP0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoslist\":\"TodosList_todoslist__ZGBjj\",\"todoslist--light\":\"TodosList_todoslist--light__31W1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo__delete\":\"TodosItem_todo__delete__1UPcl\",\"todo\":\"TodosItem_todo__db3zH\",\"todo--light\":\"TodosItem_todo--light__3rj8q\",\"todo__title\":\"TodosItem_todo__title__1Alcj\",\"todo__title--complete\":\"TodosItem_todo__title--complete__hQqDJ\",\"todo__title--light\":\"TodosItem_todo__title--light__1BpXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions__btn\":\"Actions_actions__btn__3iHhS\",\"actions\":\"Actions_actions__2lm67\",\"actions--light\":\"Actions_actions--light__sTBgo\",\"actions__items\":\"Actions_actions__items__1LHZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons__btn\":\"ActionButtons_buttons__btn__2yjap\",\"buttons\":\"ActionButtons_buttons__1uG37\",\"buttons--light\":\"ActionButtons_buttons--light__xsZBV\",\"buttons__mobile\":\"ActionButtons_buttons__mobile__m3HfU\",\"buttons__mobile--light\":\"ActionButtons_buttons__mobile--light__sed6K\"};","export default __webpack_public_path__ + \"static/media/bg-desktop-dark.73e47dbb.jpg\";","export default __webpack_public_path__ + \"static/media/bg-desktop-light.3508d620.jpg\";","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as HeaderStyles } from './Header.module.scss';\r\nimport bgDesktopDark from './../../assets/images/bg-desktop-dark.jpg';\r\nimport bgDesktopLight from './../../assets/images/bg-desktop-light.jpg';\r\nimport { RootState } from '../../store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst styled = bemCssModules(HeaderStyles);\r\n\r\nconst Header = () => {\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\r\n\treturn (\r\n\t\t<header className={styled()}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={theme === 'dark' ? bgDesktopDark : bgDesktopLight}\r\n\t\t\t\talt=''\r\n\t\t\t\taria-hidden='true'\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { State } from './themeSlice.types';\r\n\r\nconst initialState: State = {\r\n\ttheme: 'dark',\r\n};\r\n\r\nconst themeSlice = createSlice({\r\n\tname: 'theme',\r\n\tinitialState,\r\n\treducers: {\r\n\t\ttoggleTheme(state: State, { payload }: PayloadAction<string>) {\r\n\t\t\tstate.theme = state.theme === 'dark' ? 'light' : 'dark';\r\n\t\t\tlocalStorage.setItem(payload, state.theme);\r\n\t\t},\r\n\t\taddThemeFromStorage(state: State, { payload }: any) {\r\n\t\t\tstate.theme = payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { toggleTheme, addThemeFromStorage } = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as TodosHeaderStyles } from './TodosHeader.module.scss';\r\nimport iconSun from './../../../assets/svg/icon-sun.svg';\r\nimport iconMoon from './../../../assets/svg/icon-moon.svg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleTheme } from '../../../features/themeSlice/themeSlice';\r\nimport { RootState } from '../../../store';\r\n\r\nconst styled = bemCssModules(TodosHeaderStyles);\r\n\r\nconst TodosHeader = () => {\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst changeThemeHandler = () => {\r\n\t\tdispatch(toggleTheme('theme'));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styled()}>\r\n\t\t\t<h1 className={styled('title')}>Todo</h1>\r\n\t\t\t<button className={styled('btn')} onClick={changeThemeHandler}>\r\n\t\t\t\t<img src={theme === 'dark' ? iconSun : iconMoon} alt='Dark Theme' />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodosHeader;\r\n","export default __webpack_public_path__ + \"static/media/icon-check.a8fb15d0.svg\";","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as BtnStyles } from './Button.module.scss';\r\n\r\nimport IButton from './Button.types';\r\n\r\nimport iconCheck from './../../../assets/svg/icon-check.svg';\r\n\r\nbemCssModules.setSettings({\r\n\tmodifierDelimiter: '--',\r\n});\r\n\r\nconst styled = bemCssModules(BtnStyles);\r\n\r\nconst Button = ({ changeStatusHandler, status, modifier }: IButton) => {\r\n\treturn (\r\n\t\t<div className={styled('')}>\r\n\t\t\t<div\r\n\t\t\t\tonClick={changeStatusHandler}\r\n\t\t\t\tclassName={styled('btn', { complete: modifier })}\r\n\t\t\t\trole='button'\r\n\t\t\t>\r\n\t\t\t\t{status === 'complete' && (\r\n\t\t\t\t\t<img src={iconCheck} alt='Change todo status' />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","const AXIOS_APIBASE = 'http://localhost:3000/api/v1/todos';\r\n\r\nexport { AXIOS_APIBASE };\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AXIOS_APIBASE } from '../../services/api';\r\nimport { ActionStatus, State, TChangeTodoStatus } from './todoSlice.types';\r\nimport ITodosItem from '../../@types/shared/TodosItem.types';\r\nimport axios from 'axios';\r\n\r\nconst initialState: State = {\r\n\ttodos: [],\r\n\tfilteredTodos: [],\r\n};\r\n\r\nexport const getTodoData = createAsyncThunk('todos', async () => {\r\n\tconst response = await axios(AXIOS_APIBASE, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t});\r\n\r\n\tconst { data } = response.data;\r\n\treturn data.todos;\r\n});\r\n\r\nconst todoSlice = createSlice({\r\n\tname: 'todos',\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddTodo(state: State, { payload }: PayloadAction<ITodosItem>) {\r\n\t\t\tstate.todos.push(payload);\r\n\t\t\tstate.filteredTodos.push(payload);\r\n\t\t},\r\n\t\tchangeTodoStatus(\r\n\t\t\tstate: State,\r\n\t\t\t{ payload }: PayloadAction<TChangeTodoStatus>\r\n\t\t) {\r\n\t\t\tstate.todos = state.todos.map(todo => {\r\n\t\t\t\tif (todo._id === payload._id) {\r\n\t\t\t\t\ttodo.status = payload.status;\r\n\t\t\t\t}\r\n\t\t\t\treturn todo;\r\n\t\t\t});\r\n\t\t\tstate.filteredTodos = state.todos;\r\n\t\t},\r\n\t\tdeleteTodo(state: State, { payload }: PayloadAction<string>) {\r\n\t\t\tstate.todos = state.filteredTodos.filter(todo => todo._id !== payload);\r\n\t\t\tstate.filteredTodos = state.todos;\r\n\t\t},\r\n\t\tfilterTodos(state: State, { payload }: PayloadAction<ActionStatus>) {\r\n\t\t\tswitch (payload) {\r\n\t\t\t\tcase 'all':\r\n\t\t\t\t\tstate.todos = [...state.filteredTodos];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'active':\r\n\t\t\t\t\tstate.todos = state.filteredTodos.filter(\r\n\t\t\t\t\t\ttodo => todo.status === 'progress'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'completed':\r\n\t\t\t\t\tstate.todos = state.filteredTodos.filter(\r\n\t\t\t\t\t\ttodo => todo.status === 'complete'\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearCompletedTodos(state: State) {\r\n\t\t\tstate.todos = state.todos.filter(todo => todo.status !== 'complete');\r\n\t\t\tstate.filteredTodos = state.todos;\r\n\t\t},\r\n\t},\r\n\textraReducers(builder) {\r\n\t\tbuilder.addCase(\r\n\t\t\tgetTodoData.fulfilled,\r\n\t\t\t(state: State, { payload }: PayloadAction<ITodosItem[]>) => {\r\n\t\t\t\tstate.todos = [...payload];\r\n\t\t\t\tstate.filteredTodos = [...payload];\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n});\r\n\r\nexport const {\r\n\taddTodo,\r\n\tdeleteTodo,\r\n\tchangeTodoStatus,\r\n\tclearCompletedTodos,\r\n\tfilterTodos,\r\n} = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import axios from 'axios';\r\nimport ITodosItem from '../../@types/shared/TodosItem.types';\r\n\r\nconst postFetch = async (url: string, data: Partial<ITodosItem>) => {\r\n\tconst response = await axios(url, {\r\n\t\tmethod: 'POST',\r\n\t\tdata,\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t});\r\n\r\n\tconst { data: resData } = response.data;\r\n\treturn resData.newTodo;\r\n};\r\n\r\nconst patchFetch = async (url: string, data: Partial<ITodosItem>) => {\r\n\tawait axios(url, {\r\n\t\tmethod: 'PATCH',\r\n\t\tdata,\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst deleteFetch = async (url: string) => {\r\n\tawait axios(url, {\r\n\t\tmethod: 'DELETE',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t});\r\n};\r\n\r\nexport { postFetch, patchFetch, deleteFetch };\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeTodoStatus } from '../../features/todoSlice/todoSlice';\r\nimport { AXIOS_APIBASE } from '../../services/api';\r\nimport { patchFetch } from '../../services/helpers/apiActions';\r\nimport TButtonStatus from '../../@types/shared/ButtonStatus.types';\r\n\r\nconst useButton = (\r\n\tmodifiers: boolean,\r\n\tstatus: TButtonStatus,\r\n\t_id: string = '',\r\n\tformBtn?: boolean\r\n) => {\r\n\tconst [todoModifier, setTodoModifier] = useState(modifiers);\r\n\tconst [todoStatus, setTodoStatus] = useState<TButtonStatus>(status);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTodoModifier(status === 'complete' && true);\r\n\t}, [status]);\r\n\r\n\tconst changeStatusHandler = () => {\r\n\t\tconst newTodoStatus = todoStatus === 'progress' ? 'complete' : 'progress';\r\n\t\tsetTodoStatus(newTodoStatus);\r\n\t\tsetTodoModifier(!todoModifier);\r\n\t\tdispatch(\r\n\t\t\tchangeTodoStatus({\r\n\t\t\t\t_id,\r\n\t\t\t\tstatus: newTodoStatus,\r\n\t\t\t})\r\n\t\t);\r\n\t\t!formBtn &&\r\n\t\t\tpatchFetch(`${AXIOS_APIBASE}/${_id}`, {\r\n\t\t\t\tstatus: newTodoStatus,\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn { todoModifier, todoStatus, changeStatusHandler } as const;\r\n};\r\n\r\nexport default useButton;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as TodosFormStyles } from './TodosForm.module.scss';\r\nimport { ChangeEvent, FormEvent } from 'react';\r\nimport { useState } from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport useButton from '../../../hooks/useButton/useButton';\r\nimport { AXIOS_APIBASE } from '../../../services/api';\r\nimport { postFetch } from '../../../services/helpers/apiActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../../../features/todoSlice/todoSlice';\r\nimport { RootState } from '../../../store';\r\n\r\nbemCssModules.setSettings({\r\n\tmodifierDelimiter: '--',\r\n});\r\n\r\nconst styled = bemCssModules(TodosFormStyles);\r\n\r\nconst TodosForm = () => {\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\tconst [todoName, setTodoName] = useState('');\r\n\tconst { todoStatus, todoModifier, changeStatusHandler } = useButton(\r\n\t\tfalse,\r\n\t\t'progress',\r\n\t\t'',\r\n\t\ttrue\r\n\t);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst submitFormHandler = async (e: FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tif (!todoName.trim().length) return;\r\n\t\tconst newTodo = await postFetch(AXIOS_APIBASE, {\r\n\t\t\tname: todoName,\r\n\t\t\tstatus: todoStatus,\r\n\t\t});\r\n\t\tdispatch(addTodo(newTodo));\r\n\t\tsetTodoName('');\r\n\t};\r\n\r\n\tconst inputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetTodoName(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName={styled('', { light: theme === 'light' && true })}\r\n\t\t\tonSubmit={submitFormHandler}\r\n\t\t>\r\n\t\t\t<Button\r\n\t\t\t\tmodifier={todoModifier}\r\n\t\t\t\tstatus={todoStatus}\r\n\t\t\t\tchangeStatusHandler={changeStatusHandler}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\tclassName={styled('input', { light: theme === 'light' && true })}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder='Create a new todo...'\r\n\t\t\t\tvalue={todoName}\r\n\t\t\t\tonChange={inputChangeHandler}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TodosForm;\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as TodosItemStyles } from './TodosItem.module.scss';\r\nimport Button from '../../UI/Button/Button';\r\nimport useButton from '../../../hooks/useButton/useButton';\r\nimport ITodosItem from '../../../@types/shared/TodosItem.types';\r\nimport iconCross from './../../../assets/svg/icon-cross.svg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteTodo } from '../../../features/todoSlice/todoSlice';\r\nimport { deleteFetch } from '../../../services/helpers/apiActions';\r\nimport { AXIOS_APIBASE } from '../../../services/api';\r\nimport { RootState } from '../../../store';\r\n\r\nconst styled = bemCssModules(TodosItemStyles);\r\n\r\nconst TodosItem = ({ _id, name, status }: ITodosItem) => {\r\n\tconst { todoModifier, todoStatus, changeStatusHandler } = useButton(\r\n\t\tfalse,\r\n\t\tstatus,\r\n\t\t_id\r\n\t);\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleDeleteTodo = () => {\r\n\t\tdispatch(deleteTodo(_id));\r\n\t\tdeleteFetch(`${AXIOS_APIBASE}/${_id}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styled('', { light: theme === 'light' && true })}>\r\n\t\t\t<Button\r\n\t\t\t\tstatus={todoStatus}\r\n\t\t\t\tchangeStatusHandler={changeStatusHandler}\r\n\t\t\t\tmodifier={todoModifier}\r\n\t\t\t/>\r\n\t\t\t<h2\r\n\t\t\t\tclassName={styled('title', {\r\n\t\t\t\t\tcomplete: todoModifier,\r\n\t\t\t\t\tlight: theme === 'light' && true,\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{name}\r\n\t\t\t</h2>\r\n\t\t\t<button className={styled('delete')} onClick={handleDeleteTodo}>\r\n\t\t\t\t<img src={iconCross} alt='Delete todo' />\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodosItem;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as TodosListStyles } from './TodosList.module.scss';\r\nimport TodosItem from '../TodosItem/TodosItem';\r\nimport ITodosItem from '../../../@types/shared/TodosItem.types';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\n\r\nconst styled = bemCssModules(TodosListStyles);\r\n\r\nconst TodosList = () => {\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\tconst { todos } = useSelector((state: RootState) => state.todo);\r\n\r\n\treturn (\r\n\t\t<section className={styled('', { light: theme === 'light' && true })}>\r\n\t\t\t{todos.map(({ _id, name, status }) => (\r\n\t\t\t\t<TodosItem _id={_id} key={_id} name={name} status={status} />\r\n\t\t\t))}\r\n\t\t</section>\r\n\t);\r\n};\r\nexport default TodosList;\r\n","import { useState, useEffect } from 'react';\r\nimport IWindow from './useWindowSize.types';\r\n\r\nconst useWindowSize = () => {\r\n\tconst [windowSize, setWindowSize] = useState<IWindow>({\r\n\t\twidth: 0,\r\n\t\theight: 0,\r\n\t});\r\n\r\n\tconst setSizes = () => {\r\n\t\tsetWindowSize({\r\n\t\t\twidth: window.innerWidth,\r\n\t\t\theight: window.innerHeight,\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSizes();\r\n\t\twindow.addEventListener('resize', setSizes);\r\n\t\treturn () => window.removeEventListener('resize', setSizes);\r\n\t}, []);\r\n\r\n\treturn { windowSize } as const;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as ActionButtonsStyles } from './ActionButtons.module.scss';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterTodos } from '../../../features/todoSlice/todoSlice';\r\n\r\nimport TAction from './ActionButtons.types';\r\nimport { ActionStatus } from '../../../features/todoSlice/todoSlice.types';\r\n\r\nimport { RootState } from '../../../store';\r\n\r\nconst styled = bemCssModules(ActionButtonsStyles);\r\n\r\nconst ActionButtons = ({ type }: TAction) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\r\n\tconst handleFilterTodos = (status: ActionStatus) => {\r\n\t\tdispatch(filterTodos(status));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={styled(`${type === 'mobile' ? 'mobile' : ''}`, {\r\n\t\t\t\tlight: theme === 'light' && true,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<button\r\n\t\t\t\tclassName={styled('btn')}\r\n\t\t\t\tonClick={() => handleFilterTodos('all')}\r\n\t\t\t>\r\n\t\t\t\tAll\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={styled('btn')}\r\n\t\t\t\tonClick={() => handleFilterTodos('active')}\r\n\t\t\t>\r\n\t\t\t\tActive\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={styled('btn')}\r\n\t\t\t\tonClick={() => handleFilterTodos('completed')}\r\n\t\t\t>\r\n\t\t\t\tCompleted\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ActionButtons;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { default as ActionsStyles } from './Actions.module.scss';\r\nimport { clearCompletedTodos } from '../../features/todoSlice/todoSlice';\r\nimport { deleteFetch } from '../../services/helpers/apiActions';\r\nimport { AXIOS_APIBASE } from '../../services/api';\r\nimport useWindowSize from '../../hooks/UseWindowSize/useWindowSize';\r\nimport ActionButtons from '../UI/ActionButtons/ActionButtons';\r\n\r\nconst styled = bemCssModules(ActionsStyles);\r\n\r\nconst Actions = () => {\r\n\tconst { theme } = useSelector((state: RootState) => state.theme);\r\n\tconst { todos } = useSelector((state: RootState) => state.todo);\r\n\tconst { windowSize } = useWindowSize();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst clearCompletedTodosHandler = () => {\r\n\t\tdispatch(clearCompletedTodos());\r\n\t\ttodos.forEach(todo => {\r\n\t\t\tif (todo.status === 'complete') {\r\n\t\t\t\tdeleteFetch(`${AXIOS_APIBASE}/${todo._id}`);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styled('', { light: theme === 'light' && true })}>\r\n\t\t\t\t<p className={styled('items')}>{todos.length} items left</p>\r\n\t\t\t\t<ActionButtons />\r\n\t\t\t\t<button className={styled('btn')} onClick={clearCompletedTodosHandler}>\r\n\t\t\t\t\tClear Completed\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{windowSize.width < 950 && <ActionButtons type='mobile' />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Actions;\r\n","import { default as bemCssModules } from 'bem-css-modules';\r\nimport { default as TodosStyles } from './Todos.module.scss';\r\nimport TodosHeader from './TodosHeader/TodosHeader';\r\nimport TodosForm from './TodosForm/TodosForm';\r\nimport TodosList from './TodosList/TodosList';\r\nimport Actions from '../Actions/Actions';\r\n\r\nconst styled = bemCssModules(TodosStyles);\r\n\r\nconst Todos = () => {\r\n\treturn (\r\n\t\t<section className={styled()}>\r\n\t\t\t<TodosHeader />\r\n\t\t\t<TodosForm />\r\n\t\t\t<TodosList />\r\n\t\t\t<Actions />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Todos;\r\n","import { default as bemCssModules } from 'bem-css-modules';\nimport { default as AppStyles } from './App.module.scss';\n\nimport Header from './components/Header/Header';\nimport Todos from './components/Todos/Todos';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from './store';\nimport { getTodoData } from './features/todoSlice/todoSlice';\nimport { useEffect } from 'react';\nimport { addThemeFromStorage } from './features/themeSlice/themeSlice';\n\nbemCssModules.setSettings({\n\tmodifierDelimiter: '--',\n});\n\nconst styled = bemCssModules(AppStyles);\n\nconst App = () => {\n\tconst { theme } = useSelector((state: RootState) => state.theme);\n\n\tconst dispatch = useDispatch();\n\n\tconsole.log(theme);\n\n\tuseEffect(() => {\n\t\tconst storageTheme = localStorage.getItem('theme') || 'dark';\n\t\tdispatch(getTodoData());\n\t\tdispatch(addThemeFromStorage(storageTheme));\n\t}, [dispatch]);\n\n\treturn (\n\t\t<main className={styled({ light: theme === 'light' && true })}>\n\t\t\t<Header />\n\t\t\t<Todos />\n\t\t</main>\n\t);\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport themeSlice from '../features/themeSlice/themeSlice';\r\nimport todoSlice from '../features/todoSlice/todoSlice';\r\n\r\nconst todoStore = configureStore({\r\n\treducer: {\r\n\t\ttodo: todoSlice,\r\n\t\ttheme: themeSlice,\r\n\t},\r\n});\r\n\r\nexport type RootState = ReturnType<typeof todoStore.getState>;\r\n\r\nexport default todoStore;\r\n","import './styles/style.scss';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport todoStore from './store/index';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={todoStore}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}